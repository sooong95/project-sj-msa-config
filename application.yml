server:
  port: 0

eureka:
  client:
    serviceUrl:
      defaultZone: http://sj-eureka-server:8761/eureka/

spring :
  datasource:
    hikari:
      maximum-pool-size: 30   # 기본 10 → 30 이상으로 확장
      minimum-idle: 10
      connection-timeout: 20000  # 연결 대기 타임아웃 (기본 30초 → 20초)
      idle-timeout: 600000
      max-lifetime: 1800000
  cloud:
    bus:
      enabled: true
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
  kafka:
    kafka-server: kafka:9092
#  zipkin:
#    base-url: http://zipkin:9411
#    enabled: true
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 10MB
  data:
    redis:
      host: redis
      port: 6379
  jpa:
    database: mysql
    #    InnoDB??
    database-platform: org.hibernate.dialect.MySQL8Dialect
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show_sql: true

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus, busrefresh, refresh, loggers, env
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: b3
      produce: b3_multi
#  zipkin:
#    tracing:
#      endpoint: "http://zipkin:9411/api/v2/spans"

file:
  dir: /Users/song/Desktop/study/SPRING-PROJECT/image-file/

logging:
  level:
    org.springframework.cache: trace
